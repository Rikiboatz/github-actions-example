# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#apache-maven-with-a-settings-path

name: Build • Push GHCR • Deploy • Compose

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

# ป้องกัน deploy ซ้อนทับ
concurrency:
  group: build-deploy-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  packages: write

env:
  # GHCR
  REGISTRY: ghcr.io
  IMAGE_NAME: ghcr.io/${{ github.repository }}           # ตัวอย่าง: ghcr.io/owner/repo
  APP_NAME: app                                           # ชื่อคอนเทนเนอร์ที่จะรันบนเครื่องปลายทาง
  # Java
  JAVA_VERSION: "21"

jobs:
  build-test:
    name: Build & Test (Maven, Java ${{ env.JAVA_VERSION }})
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: ${{ env.JAVA_VERSION }}
          cache: maven

      - name: Build & Test
        run: mvn -B -e verify

      - name: Upload surefire/failsafe reports (always)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-reports
          path: |
            **/surefire-reports/**
            **/failsafe-reports/**
  docker-build-push:
    name: Docker Build & Push to GHCR
    runs-on: ubuntu-latest
    needs: build-test
    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata (tags, labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_NAME }}
          tags: |
            type=sha
            type=raw,value=latest
            type=raw,value=run-${{ github.run_number }}
          labels: |
            org.opencontainers.image.source=${{ github.server_url }}/${{ github.repository }}

      - name: Build & Push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          platforms: linux/amd64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          # ถ้าโปรเจกต์เป็น multi-module หรือมีไฟล์ Dockerfile อยู่ที่ path อื่น ให้ตั้งค่า:
          # file: ./Dockerfile
